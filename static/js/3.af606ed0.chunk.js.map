{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileDataForm.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostInput.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","Post","props","className","classes","item","src","alt","message","likeButton","likes","PostInputContainer","connect","state","dispatch","addPost","postData","action","addPostActionCreator","onSubmit","e","post","validate","errors","render","handleSubmit","name","input","meta","placeholder","touched","error","type","MyPosts","postsElements","postsData","map","likesCounter","newPostData","console","log","postsBlock","posts","reverse","ProfileStatusWithHooks","useState","editMode","setEditMode","activateEditMode","status","setStatus","useEffect","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","onClick","ProfileDataForm","form","LookingForAJobDescription","saveProfile","deactivateEditMode","label","Object","keys","profile","contacts","key","Contact","contactsTitle","contactsValue","ProfileData","isOwner","aboutMe","ProfileInfo","updatePictureMode","setUpdatePictureMode","Preloader","profileInfoWrapper","pictureNameStatus","onMouseLeave","onMouseDownCapture","userPic","photos","large","updateUserPicButton","target","files","length","saveNewMainPic","fullName","initialValues","MyPostsContainer","profilePage","Profile","content","mainPic","ProfileContainer","userId","this","match","params","getUserProfile","getUserStatus","refreshComponent","prevProps","prevState","React","Component","compose","withRouter","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,SAAW,8BAA8B,QAAU,6BAA6B,QAAU,6BAA6B,mBAAqB,wCAAwC,OAAS,4BAA4B,SAAW,8BAA8B,MAAQ,6B,oBCA5RD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,MAAQ,+BAA+B,MAAQ,iC,qKCevFC,EAZF,SAACC,GACZ,OACE,sBAAKC,UAAWC,IAAQC,KAAxB,UACE,qBAAKC,IAAI,sJAAsJC,IAAI,KAClK,qBAAKJ,UAAWC,IAAQI,QAAxB,SAAkCN,EAAMM,UACzC,8BACE,iCAAM,wBAAQL,UAAWC,IAAQK,WAA3B,kBAAqDP,EAAMQ,e,gBCkD1DC,EAHYC,aAjBL,SAACC,GACnB,MAAO,MAKgB,SAACC,GACxB,MAAO,CACLC,QAAS,SAACC,GACR,IAAIC,EAASC,YAAqBF,GAClCF,EAASG,OAOUL,EApDF,SAACV,GAaxB,OAAO,cAAC,IAAD,CACLiB,SAZiB,SAACC,GACdlB,EAAMa,QAAQK,EAAEC,OAYpBC,SAViB,SAACF,GACd,IAAMG,EAAS,GAIf,OAHIH,EAAEC,MAAmB,IAAXD,EAAEC,OACZE,EAAOF,KAAO,uBAEXE,GAMXC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACN,uBAAMN,SAAUM,EAAhB,UACE,cAAC,IAAD,CACEC,KAAK,OACLF,OAAQ,gBAAGG,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACN,gCAEE,sCAAUC,YAAY,mBAAsBF,IAC3CC,EAAKE,SAAWF,EAAKG,OAAS,+BAAOH,EAAKG,cAIjD,wBAAQC,KAAK,SAAb,2BCYOC,EAtCC,SAAC/B,GACf,IAAIgC,EAAgBhC,EAAMiC,UAAUC,KAAI,SAACf,GAAD,OAAU,cAAC,EAAD,CAAMb,QAASa,EAAKb,QAASE,MAAOW,EAAKgB,kBACzEnC,EAAMoC,YAgBxB,OAHAC,QAAQC,IAAItC,GACZqC,QAAQC,IAAI,UAEJ,sBAAKrC,UAAWC,IAAQqC,WAAxB,UACN,gCACE,0CACC,gCACC,8BACE,cAAC,EAAD,MAGF,8BAKJ,qBAAKtC,UAAWC,IAAQsC,MAAxB,SACIR,EAAcS,gB,kCCLPC,EA/BgB,SAAC1C,GAC5B,MAA8B2C,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACMC,EAAmB,WACrBD,GAAY,IAMhB,EAA0BF,mBAAS3C,EAAM+C,QAAzC,mBAAKA,EAAL,KAAaC,EAAb,KAUA,OAJAC,qBAAU,WACND,EAAUhD,EAAM+C,UAClB,CAAC/C,EAAM+C,SAGL,gCACI,8BACKH,GAAY,uBAAOM,SAZT,SAAChC,GACpB8B,EAAU9B,EAAEiC,cAAcC,QAW4BA,MAAOL,EAAQM,WAAW,EAAMC,OAjB/D,WACvBT,GAAY,GACZ7C,EAAMuD,aAAaR,QAiBf,+BACMH,GAAY,8BAAM,sBAAMY,QAASV,EAAf,SAAmCC,KAAkB,sBAAMS,QAASV,EAAf,0C,0BCkD1EW,EA1ES,SAACzD,GAcrB,OACI,qBAAKC,UAAWC,IAAQwD,KAAxB,SACI,cAAC,IAAD,CACIzC,SAhBK,SAACC,GACdmB,QAAQC,IAAIpB,GACZA,EAAEyC,0BAA4B,OAC9B3D,EAAM4D,YAAY1C,GAClBlB,EAAM6D,oBAAmB,IAajBzC,SAXK,SAACF,GAKd,MAJe,IAWPI,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACJ,uBAAMN,SAAUM,EAAhB,UACI,cAAC,IAAD,CACIC,KAAK,WACLF,OAAQ,gBAAGG,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACJ,gCACI,uBAAOzB,UAAWC,IAAQ4D,MAA1B,uBACA,+CAAO7D,UAAWC,IAAQuB,OAAWA,GAArC,IAA4CE,YAAY,eACvDD,EAAKE,SAAWF,EAAKG,OAAS,+BAAOH,EAAKG,cAIvD,cAAC,IAAD,CACIL,KAAK,UACLF,OAAQ,gBAAGG,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACJ,gCACI,uBAAOzB,UAAWC,IAAQ4D,MAA1B,sBACA,kDAAU7D,UAAWC,IAAQuB,OAAYA,GAAzC,IAAgDE,YAAY,cAC3DD,EAAKE,SAAWF,EAAKG,OAAS,+BAAQH,EAAKG,cAIxD,cAAC,IAAD,CACIL,KAAK,iBACLM,KAAK,WACLR,OAAQ,gBAAGG,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACJ,gCACI,uBAAOzB,UAAWC,IAAQ4D,MAA1B,+BACA,+CAAOhC,KAAK,WAAW7B,UAAWC,IAAQuB,OAAYA,GAAtD,IAA6DE,YAAY,aACxED,EAAKE,SAAWF,EAAKG,OAAS,+BAAQH,EAAKG,cAIzD,4CAAekC,OAAOC,KAAKhE,EAAMiE,QAAQC,UAAUhC,KAAI,SAAAiC,GACnD,OAAQ,cAAC,IAAD,CACR3C,KAAI,mBAAc2C,GAClB7C,OAAQ,gBAAGG,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACJ,gCACI,uBAAOzB,UAAWC,IAAQ4D,MAA1B,SAAkCK,IAClC,kDAAUlE,UAAWC,IAAQuB,OAAYA,GAAzC,IAAgDE,YAAawC,KAC5DzC,EAAKE,SAAWF,EAAKG,OAAS,+BAAQH,EAAKG,oBAMvD,8BACI,wBAAQC,KAAK,SAAb,6BChBtBsC,G,OAAU,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAChC,OAAO,gCAAMD,EAAN,IAAsBC,OAGzBC,EAAc,SAAC,GAA4C,IAA1CN,EAAyC,EAAzCA,QAASO,EAAgC,EAAhCA,QAAS1B,EAAuB,EAAvBA,iBACvC,OAAO,gCACJ0B,GAAW,8BAAK,wBAAQhB,QAASV,EAAjB,oBACjB,qBAAK7C,UAAWC,IAAQuE,QAAxB,SACCR,EAAQQ,UAET,qBAAKxE,UAAU,WAAf,SACE,4CAAe8D,OAAOC,KAAKC,EAAQC,UAAUhC,KAAI,SAAAiC,GAC/C,OAAO,cAAC,EAAD,CAAmBE,cAAeF,EAAKG,cAAeL,EAAQC,SAASC,IAAzDA,eASdO,EAjEK,SAAC1E,GAGnB,MAA8B2C,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAAgDF,oBAAS,GAAzD,mBAAKgC,EAAL,KAAwBC,EAAxB,KAEA,IAAK5E,EAAMiE,QACT,OAAO,cAACY,EAAA,EAAD,IAeT,OACE,sBAAK5E,UAAWC,IAAQ4E,mBAAxB,UACE,sBAAK7E,UAAWC,IAAQ6E,kBAAxB,UACE,sBAAKC,aANU,SAAC9D,GACpB0D,GAAqB,IAKgBK,mBATZ,SAAC/D,GAC1B0D,GAAqB,IAQjB,UACA,qBAAK3E,UAAWC,IAAQgF,QAAS9E,IAAKJ,EAAMiE,QAAQkB,OAAOC,OAASF,MACjElF,EAAMwE,SAAWG,GAAqB,8BAAK,uBAAO1E,UAAWC,IAAQmF,oBAAqBvD,KAAK,OAC9FoB,SAlBgB,SAAChC,GACrBA,EAAEoE,OAAOC,MAAMC,QACjBxF,EAAMyF,eAAevE,EAAEoE,OAAOC,MAAM,YAkBlC,qBAAKtF,UAAWC,IAAQwF,SAAxB,SACG1F,EAAMiE,QAAQyB,WAEjB,8BACE,cAAC,EAAD,CAAwB3C,OAAQ/C,EAAM+C,OAAQQ,aAAcvD,EAAMuD,oBAGrEX,EAAW,cAAC,EAAD,CAAiB+C,cAAe3F,EAAMiE,QAASA,QAASjE,EAAMiE,QAASL,YAAa5D,EAAM4D,YAAaC,mBAAoB,WAAOhB,GAAY,MACxJ,cAAC,EAAD,CAAaoB,QAASjE,EAAMiE,QAASO,QAASxE,EAAMwE,QAAS1B,iBAAkB,WAAOD,GAAY,UCY3F+C,EAHQlF,aArBD,SAACC,GACrB,MAAO,CACLsB,UAAWtB,EAAMkF,YAAY5D,cAKR,SAACrB,GACxB,MAAO,CAKLC,QAAS,WACPD,EAASI,mBAOQN,CAA6CqB,GCpCrD+D,EAbC,SAAC9F,GAEf,OACE,sBAAKC,UAAWC,IAAQ6F,QAAxB,cACE,8BACE,qBAAK9F,UAAWC,IAAQ8F,QAAS5F,IAAI,wGAEvC,cAAC,EAAD,CAAawD,YAAa5D,EAAM4D,YAAaY,QAASxE,EAAMwE,QAASP,QAASjE,EAAMiE,QAASlB,OAAQ/C,EAAM+C,OAAQQ,aAAcvD,EAAMuD,aAAckC,eAAgBzF,EAAMyF,iBAC3K,cAAC,EAAD,Q,sCCJAQ,E,sKAEJ,WACE,IAAIC,EAASC,KAAKnG,MAAMoG,MAAMC,OAAOH,OAChCA,IACHA,EAAS,OAEXC,KAAKnG,MAAMsG,eAAeJ,GAC1BC,KAAKnG,MAAMuG,cAAcL,K,+BAG3B,WACEC,KAAKK,qB,gCAcP,SAAmBC,EAAWC,GACxBP,KAAKnG,MAAMoG,MAAMC,OAAOH,QAAUO,EAAUL,MAAMC,OAAOH,QAC3DC,KAAKK,qB,oBAMT,WACE,OACE,cAAC,EAAD,2BAAaL,KAAKnG,OAAlB,IACEwE,SAAU2B,KAAKnG,MAAMoG,MAAMC,OAAOH,OAClCjC,QAASkC,KAAKnG,MAAMiE,QACpBlB,OAAQoD,KAAKnG,MAAM+C,OACnBa,YAAauC,KAAKnG,MAAM4D,YACxBL,aAAc4C,KAAKnG,MAAMuD,aACzBkC,eAAgBU,KAAKnG,MAAMyF,sB,GA1CJkB,IAAMC,WAmEtBC,sBACbnG,aAdoB,SAACC,GAAD,MAAY,CAChCsD,QAAStD,EAAMkF,YAAY5B,QAC3BlB,OAAQpC,EAAMkF,YAAY9C,UAYD,CAAEuD,mBAAgBC,kBAAehD,iBAAckC,mBAAgB7B,kBACxFkD,IACAC,IAHaF,CAIbZ,I,mBClFFpG,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,2B,mBCA/DD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,mBCAnED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,WAAa,yBAAyB,QAAU","file":"static/js/3.af606ed0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullName\":\"ProfileInfo_fullName__2p--3\",\"userPic\":\"ProfileInfo_userPic__Ne5H0\",\"aboutMe\":\"ProfileInfo_aboutMe__1mww3\",\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__2ldiX\",\"social\":\"ProfileInfo_social__1Pg9N\",\"contacts\":\"ProfileInfo_contacts__3y62P\",\"links\":\"ProfileInfo_links__2gyiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__3_Fge\",\"label\":\"ProfileDataForm_label__1PG5L\",\"input\":\"ProfileDataForm_input__2FqNM\"};","import React from 'react';\nimport classes from './Post.module.css';\n\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <img src='https://www.byrdie.com/thmb/kAXw1ZXSfixyaiIjLt0tVfRzhhs=/843x1024/filters:fill(auto,1)/GettyImages-1035308964-5d15a77127854247b5c841d339a546c0.jpeg' alt=\"\" />\n       <div className={classes.message}>{props.message}</div> \n      <div>\n        <span><button className={classes.likeButton}>Like</button>{props.likes}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import { Form, Field } from 'react-final-form'\nimport { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profileReducer';\n\n\nexport const PostInput = (props) => {\n    \n    const onSubmit = (e) => {\n        props.addPost(e.post);\n    }\n    const validate = (e) => {\n        const errors = {};\n        if (e.post && e.post === 0) {\n            errors.post = 'Enter a valid email';\n        }\n        return errors;\n    }\n     \n  return <Form\n    onSubmit={onSubmit}\n    validate={validate}\n    render={({ handleSubmit }) => (\n      <form onSubmit={handleSubmit}>\n        <Field\n          name=\"post\"\n          render={({ input, meta }) => (\n            <div>\n              {/* <label>Enter your message</label> */}\n              <textarea placeholder='Enter your post' {...input} />\n              {meta.touched && meta.error && <span>{meta.error}</span>}\n            </div>\n          )}\n        />\n        <button type=\"submit\">Post</button>\n      </form>\n    )}\n  />\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n  \n    }\n  }\n  \n  let mapDispatchToProps = (dispatch) => {\n    return {\n      addPost: (postData) => {\n        let action = addPostActionCreator(postData);\n        dispatch(action);\n      },\n    }\n  }\n  \n  \n  \n  let PostInputContainer = connect(mapStateToProps, mapDispatchToProps)(PostInput); \n  \n  \nexport default PostInputContainer;\n","import React from 'react';\nimport { addPostActionCreator, onPostChangeActionCreator } from '../../../redux/profileReducer';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post.jsx';\nimport PostInputContainer from './PostInput';\n\n\nconst MyPosts = (props) => {\n  let postsElements = props.postsData.map((post) => <Post message={post.message} likes={post.likesCounter} />);\n  let newPostData = props.newPostData;\n\n  let newPostElement = React.createRef();\n  let addPost = () => {\n   props.addPost(); \n  }\n\n  let onPostChange = () => {\n    let text = newPostElement.current.value;\n    props.updateNewPostData(text);\n    \n}\n\n  console.log(props);\n  console.log('render');\n\n  return (<div className={classes.postsBlock}>\n    <div>\n      <h2>My posts</h2>\n       <div>\n        <div>\n          <PostInputContainer />\n          {/* <textarea placeholder='Enter your post' value={newPostData} onChange={onPostChange} ref={newPostElement} name=\"\" id=\"\" cols=\"111\" rows=\"5\" /> */}\n        </div>\n        <div>\n         {/*  <button onClick={addPost} >Add post</button> */}\n        </div>\n      </div>\n    </div>\n    <div className={classes.posts}>\n      { postsElements.reverse() }\n    </div>\n  </div>\n  );\n}\n\nexport default MyPosts;","import React, { useState } from 'react'\nimport { useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    let [status, setStatus] = useState(props.status);\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n        \n    }\n\n    useEffect(() => {\n        setStatus(props.status);\n    },[props.status]);\n\n    return (\n        <div>\n            <div>\n                {editMode && <input onChange={onStatusChange} value={status} autoFocus={true} onBlur={deactivateEditMode} ></input>}\n            </div>\n            <div>\n                {!editMode && <div>{<span onClick={activateEditMode} >{status}</span> || <span onClick={activateEditMode}>Enter your status...</span>}</div>}\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import { Form, Field } from 'react-final-form';\nimport classes from './ProfileDataForm.module.css';\n\n\nconst ProfileDataForm = (props) => {\n    const onSubmit = (e) => {\n        console.log(e);\n        e.LookingForAJobDescription = 'null';\n        props.saveProfile(e);\n        props.deactivateEditMode(false)\n    }\n    const validate = (e) => {\n        const errors = {};\n        if (10 === 1) {\n            errors.email = 'Enter a valid email';\n        }\n        return errors;\n    }\n    return (\n        <div className={classes.form}>\n            <Form\n                onSubmit={onSubmit}\n                validate={validate}\n                render={({ handleSubmit }) => (\n                    <form onSubmit={handleSubmit}>\n                        <Field\n                            name=\"fullName\"\n                            render={({ input, meta }) => (\n                                <div>\n                                    <label className={classes.label}>Full Name</label>\n                                    <input className={classes.input} {...input} placeholder='Full Name' />\n                                    {meta.touched && meta.error && <span>{meta.error}</span>}\n                                </div>\n                            )}\n                        />\n                        <Field\n                            name=\"AboutMe\"\n                            render={({ input, meta }) => (\n                                <div>\n                                    <label className={classes.label}>About me</label>\n                                    <textarea className={classes.input}  {...input} placeholder='About me' />\n                                    {meta.touched && meta.error && <span >{meta.error}</span>}\n                                </div>\n                            )}\n                        />\n                        <Field\n                            name=\"lookingForAJob\"\n                            type='checkbox'\n                            render={({ input, meta }) => (\n                                <div>\n                                    <label className={classes.label}>Looking for a job</label>\n                                    <input type='checkbox' className={classes.input}  {...input} placeholder='Website' />\n                                    {meta.touched && meta.error && <span >{meta.error}</span>}\n                                </div>\n                            )}\n                        />\n                       <div>Contacts:{Object.keys(props.profile.contacts).map(key => {\n                           return  <Field\n                           name={`contacts.${key}`}\n                           render={({ input, meta }) => (\n                               <div>\n                                   <label className={classes.label}>{key}</label>\n                                   <textarea className={classes.input}  {...input} placeholder={key} />\n                                   {meta.touched && meta.error && <span >{meta.error}</span>}\n                               </div>\n                           )}\n                       />\n                       })}\n                        </div>\n                        <div>\n                            <button type=\"submit\">Save</button>\n                        </div>\n                    </form>\n                )} />\n        </div>\n    )\n}\n\nexport default ProfileDataForm;","import React, {useState} from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from '../../Common/Preloader';\nimport ProfileStatusWithHooks from './../ProfileStatusWithHooks';\nimport userPic from './../../../assets/images/user.png'\nimport { useEffect } from 'react';\nimport ProfileDataForm from '../ProfileDataForm';\nimport updateIcon from './../../../assets/images/update-icon.png';\nimport { span } from 'prelude-ls';\n\nconst ProfileInfo = (props) => {\n\n\n  let [editMode, setEditMode] = useState(false);\n  let [updatePictureMode, setUpdatePictureMode] = useState(false);\n\n  if (!props.profile) {\n    return <Preloader />\n  }\n\n  const onMainPicSelected = (e) => {\n    if (e.target.files.length) {\n      props.saveNewMainPic(e.target.files[0])\n    }\n  }\n\n  const onMouseDownCapture = (e) => {\n    setUpdatePictureMode(true);\n  }\n  const onMouseLeave = (e) => {\n    setUpdatePictureMode(false);\n  }\n  return (\n    <div className={classes.profileInfoWrapper}>\n      <div className={classes.pictureNameStatus}>\n        <div onMouseLeave={onMouseLeave} onMouseDownCapture={onMouseDownCapture}> \n        <img className={classes.userPic} src={props.profile.photos.large || userPic} />\n          {props.isOwner && updatePictureMode && <div><input className={classes.updateUserPicButton} type=\"file\"\n            onChange={onMainPicSelected}></input></div>}\n        </div>\n        <div className={classes.fullName}>\n          {props.profile.fullName}\n        </div>\n        <div>\n          <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n        </div>\n      </div>\n      {editMode ? <ProfileDataForm initialValues={props.profile} profile={props.profile} saveProfile={props.saveProfile} deactivateEditMode={() => {setEditMode(false)}} /> :\n        <ProfileData profile={props.profile} isOwner={props.isOwner} activateEditMode={() => {setEditMode(true)}}  />}\n    </div>\n  )\n}\n\n\nconst Contact = ({ contactsTitle, contactsValue }) => {\n  return <div>{contactsTitle}:{contactsValue}</div>;\n}\n\nconst ProfileData = ({ profile, isOwner, activateEditMode }) => {\n  return <div>\n    {isOwner && <div><button onClick={activateEditMode}>Edit</button></div>}\n    <div className={classes.aboutMe}>\n    {profile.aboutMe}\n  </div>\n    <div className='contacts'>\n      <div>Contacts:{Object.keys(profile.contacts).map(key => {\n        return <Contact key={key} contactsTitle={key} contactsValue={profile.contacts[key]} />\n      })}</div>\n    </div>\n  </div>\n}\n\n\n\n\nexport default ProfileInfo;","import React from 'react';\nimport { addPostActionCreator, onPostChangeActionCreator } from '../../../redux/profileReducer';\n//import StoreContext from '../../../StoreContext';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\n\n\n/* const MyPostsContainer = (props) => {\n  //let state = props.store.getState();\n  return (\n    <StoreContext.Consumer>\n      {\n      (store) => {\n        let state = store.getState();\n\n        let addPost = () => {\n          store.dispatch(addPostActionCreator());\n        }\n\n        let onPostChange = (text) => {\n          let action = onPostChangeActionCreator(text);\n          store.dispatch(action);\n        }\n        return <MyPosts updateNewPostData={onPostChange}\n          addPost={addPost}\n          postsData={state.profilePage.postsData}\n          newPostData={state.profilePage.newPostData} />\n      }\n    }\n    </StoreContext.Consumer>\n  );\n}\n */\n\nlet mapStateToProps = (state) => {\n  return {\n    postsData: state.profilePage.postsData,\n/*     newPostData: state.profilePage.newPostData */\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n/*     updateNewPostData: (text) => {\n      let action = onPostChangeActionCreator(text);\n      dispatch(action);\n    }, */\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    }\n  }\n}\n\n\n\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts); \n\n\nexport default MyPostsContainer;","import React from 'react';\nimport classes from './Profile.module.css';\n//import classes from './MyPosts.module.css';\nimport MyPosts from './MyPosts/MyPosts.jsx';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\n\nconst Profile = (props) => {\n  \n  return (\n    <div className={classes.content}> {/*-----this class as deleted because we added app-wrapper-content*/}\n      <div>\n        <img className={classes.mainPic} src='https://www.artmajeur.com/medias/hd/n/o/nottrott/artwork/10805254_large-abstract-painting-958.jpg' />\n      </div>\n      <ProfileInfo saveProfile={props.saveProfile} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} saveNewMainPic={props.saveNewMainPic} />\n      <MyPostsContainer /* store={props.store}  */ />\n    </div>\n  );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getUserStatus, updateStatus, saveNewMainPic, saveProfile } from '../../redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { usersAPI } from '../../Api/api';\nimport { Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n  refreshComponent() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = 17754;\n    }\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshComponent();\n   /*  let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = 17700;\n    }\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId); */\n   /*  usersAPI.getProfile(userId)\n  //axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\n      .then(response => {\n        this.props.setUserProfile(response.data)\n      }) */\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshComponent();\n      \n    }\n \n\n  }\n  render() {\n    return (\n      <Profile {...this.props}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        saveProfile={this.props.saveProfile}\n        updateStatus={this.props.updateStatus}\n        saveNewMainPic={this.props.saveNewMainPic}\n      />\n    )\n  }\n}\n\n\n\n\n\n\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status\n})\n/* \nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\nlet withUrlContainer = withRouter(AuthRedirectComponent);\n\n\n\nexport default connect (mapStateToProps, {getUserProfile})(withUrlContainer); */\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus, saveNewMainPic, saveProfile }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\",\"mainPic\":\"Profile_mainPic__3Krzy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"likeButton\":\"Post_likeButton__iek-s\",\"message\":\"Post_message__3raFK\"};"],"sourceRoot":""}