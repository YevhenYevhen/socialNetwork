{"version":3,"sources":["components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostInput.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileDataForm.module.css"],"names":["Post","props","className","classes","item","src","alt","message","likeButton","likes","PostInputContainer","connect","state","dispatch","addPost","postData","action","addPostActionCreator","onSubmit","e","post","validate","errors","render","handleSubmit","name","input","meta","placeholder","touched","error","type","MyPosts","postsElements","postsData","map","likesCounter","newPostData","console","log","postsBlock","posts","reverse","ProfileStatusWithHooks","useState","editMode","setEditMode","activateEditMode","status","setStatus","useEffect","isOwner","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","onClick","ProfileDataForm","form","LookingForAJobDescription","saveProfile","deactivateEditMode","label","Object","keys","profile","contacts","key","Contact","contactsTitle","contactsValue","hoverMode","setHoverMode","toggleHoverMode","toggle","href","onMouseEnter","onMouseLeave","iconsHover","icons","ProfileData","filter","ProfileInfo","updatePictureMode","setUpdatePictureMode","Preloader","wrapper","ownerUserPic","userPic","photos","large","updateUserPicButton","target","files","length","saveNewMainPic","nameAndStatus","fullName","aboutMe","initialValues","MyPostsContainer","profilePage","Profile","content","mainPic","ProfileContainer","userId","this","match","params","authUserId","getUserProfile","getUserStatus","getAuthUserPhoto","refreshComponent","prevProps","prevState","React","Component","compose","auth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","isAuth","RedirectComponent","to","module","exports"],"mappings":"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","file":"static/js/3.7bd066f3.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './Post.module.css';\n\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <img src='https://www.byrdie.com/thmb/kAXw1ZXSfixyaiIjLt0tVfRzhhs=/843x1024/filters:fill(auto,1)/GettyImages-1035308964-5d15a77127854247b5c841d339a546c0.jpeg' alt=\"\" />\n       <div className={classes.message}>{props.message}</div> \n      <div>\n        <span><button className={classes.likeButton}>Like</button>{props.likes}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import { Form, Field } from 'react-final-form'\nimport { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profileReducer';\n\n\nexport const PostInput = (props) => {\n    \n    const onSubmit = (e) => {\n        props.addPost(e.post);\n    }\n    const validate = (e) => {\n        const errors = {};\n        if (e.post && e.post === 0) {\n            errors.post = 'Enter a valid email';\n        }\n        return errors;\n    }\n     \n  return <Form\n    onSubmit={onSubmit}\n    validate={validate}\n    render={({ handleSubmit }) => (\n      <form onSubmit={handleSubmit}>\n        <Field\n          name=\"post\"\n          render={({ input, meta }) => (\n            <div>\n              {/* <label>Enter your message</label> */}\n              <textarea placeholder='Enter your post' {...input} />\n              {meta.touched && meta.error && <span>{meta.error}</span>}\n            </div>\n          )}\n        />\n        <button type=\"submit\">Post</button>\n      </form>\n    )}\n  />\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n  \n    }\n  }\n  \n  let mapDispatchToProps = (dispatch) => {\n    return {\n      addPost: (postData) => {\n        let action = addPostActionCreator(postData);\n        dispatch(action);\n      },\n    }\n  }\n  \n  \n  \n  let PostInputContainer = connect(mapStateToProps, mapDispatchToProps)(PostInput); \n  \n  \nexport default PostInputContainer;\n","import React from 'react';\nimport { addPostActionCreator, onPostChangeActionCreator } from '../../../redux/profileReducer';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post.jsx';\nimport PostInputContainer from './PostInput';\n\n\nconst MyPosts = (props) => {\n  let postsElements = props.postsData.map((post) => <Post message={post.message} likes={post.likesCounter} />);\n  let newPostData = props.newPostData;\n\n  let newPostElement = React.createRef();\n  let addPost = () => {\n   props.addPost(); \n  }\n\n  let onPostChange = () => {\n    let text = newPostElement.current.value;\n    props.updateNewPostData(text);\n    \n}\n\n  console.log(props);\n  console.log('render');\n\n  return (<div className={classes.postsBlock}>\n    <div>\n      <h2>My posts</h2>\n       <div>\n        <div>\n          <PostInputContainer />\n          {/* <textarea placeholder='Enter your post' value={newPostData} onChange={onPostChange} ref={newPostElement} name=\"\" id=\"\" cols=\"111\" rows=\"5\" /> */}\n        </div>\n        <div>\n         {/*  <button onClick={addPost} >Add post</button> */}\n        </div>\n      </div>\n    </div>\n    <div className={classes.posts}>\n      { postsElements.reverse() }\n    </div>\n  </div>\n  );\n}\n\nexport default MyPosts;","import React, { useState } from 'react'\nimport { useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    let [status, setStatus] = useState(props.status);\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n        \n    }\n\n    useEffect(() => {\n        setStatus(props.status);\n    },[props.status]);\n\n    return (\n        <div>\n            <div>\n                {props.isOwner && editMode && <input onChange={onStatusChange} value={status} autoFocus={true} onBlur={deactivateEditMode} ></input>}\n            </div>\n            <div>\n                {!editMode && <div>{<span onClick={props.isOwner && activateEditMode} >{status}</span> || <span onClick={props.isOwner &&  activateEditMode}>Enter your status...</span>}</div>}\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import { Form, Field } from 'react-final-form';\nimport classes from './ProfileDataForm.module.css';\n\n\nconst ProfileDataForm = (props) => {\n    const onSubmit = (e) => {\n        console.log(e);\n        e.LookingForAJobDescription = 'null';\n        props.saveProfile(e);\n        props.deactivateEditMode(false)\n    }\n    const validate = (e) => {\n        const errors = {};\n        if (10 === 1) {\n            errors.email = 'Enter a valid email';\n        }\n        return errors;\n    }\n    return (\n        <div className={classes.form}>\n            <Form\n                onSubmit={onSubmit}\n                validate={validate}\n                render={({ handleSubmit }) => (\n                    <form onSubmit={handleSubmit}>\n                        <Field\n                            name=\"fullName\"\n                            render={({ input, meta }) => (\n                                <div>\n                                    <label className={classes.label}>Full Name</label>\n                                    <input className={classes.input} {...input} placeholder='Full Name' />\n                                    {meta.touched && meta.error && <span>{meta.error}</span>}\n                                </div>\n                            )}\n                        />\n                        <Field\n                            name=\"AboutMe\"\n                            render={({ input, meta }) => (\n                                <div>\n                                    <label className={classes.label}>About me</label>\n                                    <textarea className={classes.input}  {...input} placeholder='About me' />\n                                    {meta.touched && meta.error && <span >{meta.error}</span>}\n                                </div>\n                            )}\n                        />\n                        <Field\n                            name=\"lookingForAJob\"\n                            type='checkbox'\n                            render={({ input, meta }) => (\n                                <div>\n                                    <label className={classes.label}>Looking for a job</label>\n                                    <input type='checkbox' className={classes.input}  {...input} placeholder='Website' />\n                                    {meta.touched && meta.error && <span >{meta.error}</span>}\n                                </div>\n                            )}\n                        />\n                       <div>Contacts:{Object.keys(props.profile.contacts).map(key => {\n                           return  <Field\n                           name={`contacts.${key}`}\n                           render={({ input, meta }) => (\n                               <div>\n                                   <label className={classes.label}>{key}</label>\n                                   <textarea className={classes.input}  {...input} placeholder={key} />\n                                   {meta.touched && meta.error && <span >{meta.error}</span>}\n                               </div>\n                           )}\n                       />\n                       })}\n                        </div>\n                        <div>\n                            <button type=\"submit\">Save</button>\n                        </div>\n                    </form>\n                )} />\n        </div>\n    )\n}\n\nexport default ProfileDataForm;","import React, { useState } from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from '../../Common/Preloader';\nimport ProfileStatusWithHooks from './../ProfileStatusWithHooks';\nimport userPic from './../../../assets/images/user.png'\nimport { useEffect } from 'react';\nimport ProfileDataForm from '../ProfileDataForm';\nimport updateIcon from './../../../assets/images/update-icon.png';\nimport { span } from 'prelude-ls';\nimport { NavLink } from 'react-router-dom';\n\nconst ProfileInfo = (props) => {\n\n\n  let [editMode, setEditMode] = useState(false);\n  let [updatePictureMode, setUpdatePictureMode] = useState(false);\n\n  if (!props.profile) {\n    return <Preloader />\n  }\n\n  const onMainPicSelected = (e) => {\n    if (e.target.files.length) {\n      props.saveNewMainPic(e.target.files[0])\n    }\n    setUpdatePictureMode(false);\n  }\n\n  const onPictureClick = (e) => {\n    setUpdatePictureMode(true);\n  }\n\n\n\n  return (\n    <div className={classes.wrapper}>\n      <img onClick={onPictureClick} className={props.isOwner ? classes.ownerUserPic : classes.userPic} src={props.profile.photos.large || userPic} />\n      {props.isOwner && updatePictureMode && <div><input className={classes.updateUserPicButton} type=\"file\"\n        onChange={onMainPicSelected} ></input></div>}\n      <div className={classes.nameAndStatus}>\n        <div className={classes.fullName}>\n          {props.profile.fullName}\n        </div>\n        <div className={classes.status}>\n          <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner} />\n        </div>\n      </div>\n\n      <div className={classes.aboutMe}>\n      {props.profile.aboutMe}\n    </div>\n      {editMode ? <ProfileDataForm initialValues={props.profile} profile={props.profile} saveProfile={props.saveProfile} deactivateEditMode={() => { setEditMode(false) }} /> :\n        <ProfileData profile={props.profile} isOwner={props.isOwner} activateEditMode={() => { setEditMode(true) }} />}\n    </div>\n  )\n}\n\n\n\n\nconst Contact = ({ contactsTitle, contactsValue }) => {\n\n  let [hoverMode, setHoverMode] = useState(false)\n\n  const toggleHoverMode = (toggle) => {\n    setHoverMode(toggle);\n  }\n    switch (contactsTitle) {\n      case ('facebook'):\n        return <a href={contactsValue}><img onMouseEnter={() => toggleHoverMode(true)}\n          onMouseLeave={() => toggleHoverMode(false)}\n          className={hoverMode ? classes.iconsHover : classes.icons}\n          src='https://cdn3.iconfinder.com/data/icons/capsocial-round/500/facebook-512.png' /></a>\n      case ('github'):\n        return <a href={contactsValue} onMouseEnter={() => toggleHoverMode(true)}\n          onMouseLeave={() => toggleHoverMode(false)}><img\n          className={hoverMode ? classes.iconsHover : classes.icons}\n            src='https://icons-for-free.com/iconfiles/png/512/part+1+github-1320568339880199515.png' /></a>\n      case ('instagram'):\n        return <a href={contactsValue} onMouseEnter={() => toggleHoverMode(true)}\n          onMouseLeave={() => toggleHoverMode(false)}><img\n          className={hoverMode ? classes.iconsHover : classes.icons}\n            src=\"https://cdn-icons-png.flaticon.com/512/174/174855.png\" alt=\"\" /></a>\n      case ('twitter'):\n        return <a href={contactsValue} onMouseEnter={() => toggleHoverMode(true)}\n          onMouseLeave={() => toggleHoverMode(false)}><img\n          className={hoverMode ? classes.iconsHover : classes.icons}\n            src=\"https://www.freepnglogos.com/uploads/twitter-logo-png/twitter-logo-vector-png-clipart-1.png\" alt=\"\" /></a>\n      case ('youtube'):\n        return <a href={contactsValue} onMouseEnter={() => toggleHoverMode(true)}\n          onMouseLeave={() => toggleHoverMode(false)}><img\n          className={hoverMode ? classes.iconsHover : classes.icons}\n            src=\"https://cliply.co/wp-content/uploads/2019/04/371903520_SOCIAL_ICONS_YOUTUBE.png\" alt=\"\" /></a>\n\n       \n    }\n}\n\n\n\n\n\n\n\n\nconst ProfileData = ({ profile, isOwner, activateEditMode }) => {\n\n  return <>\n      <div className={classes.contacts}>{Object.keys(profile.contacts).filter(key => key !== 'mainLink' && key !== 'vk' && key !== 'website')\n      .map(key => {\n          if(profile.contacts[key]){\n        return  <Contact key={key} contactsTitle={key} contactsValue={profile.contacts[key]} /> \n        }\n      })}\n      {isOwner && <div><button onClick={activateEditMode}>Edit</button></div>}\n    </div>\n        \n    </>\n}\n\n\n\n\nexport default ProfileInfo;","import React from 'react';\nimport { addPostActionCreator, onPostChangeActionCreator } from '../../../redux/profileReducer';\n//import StoreContext from '../../../StoreContext';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\n\n\n\n/* const MyPostsContainer = (props) => {\n  //let state = props.store.getState();\n  return (\n    <StoreContext.Consumer>\n      {\n      (store) => {\n        let state = store.getState();\n\n        let addPost = () => {\n          store.dispatch(addPostActionCreator());\n        }\n\n        let onPostChange = (text) => {\n          let action = onPostChangeActionCreator(text);\n          store.dispatch(action);\n        }\n        return <MyPosts updateNewPostData={onPostChange}\n          addPost={addPost}\n          postsData={state.profilePage.postsData}\n          newPostData={state.profilePage.newPostData} />\n      }\n    }\n    </StoreContext.Consumer>\n  );\n}\n */\n\nlet mapStateToProps = (state) => {\n  return {\n    postsData: state.profilePage.postsData,\n/*     newPostData: state.profilePage.newPostData */\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n/*     updateNewPostData: (text) => {\n      let action = onPostChangeActionCreator(text);\n      dispatch(action);\n    }, */\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    }\n  }\n}\n\n\n\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts); \n\n\nexport default MyPostsContainer;","import React from 'react';\nimport classes from './Profile.module.css';\n//import classes from './MyPosts.module.css';\nimport MyPosts from './MyPosts/MyPosts.jsx';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\n\nconst Profile = (props) => {\n  \n  return (\n    <div className={classes.content}> {/*-----this class as deleted because we added app-wrapper-content*/}\n      <div>\n        <img className={classes.mainPic} src='https://www.artmajeur.com/medias/hd/n/o/nottrott/artwork/10805254_large-abstract-painting-958.jpg' />\n      </div>\n      <ProfileInfo saveProfile={props.saveProfile} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} saveNewMainPic={props.saveNewMainPic} />\n      <MyPostsContainer /* store={props.store}  */ />\n    </div>\n  );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getUserStatus, updateStatus, saveNewMainPic, saveProfile } from '../../redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { usersAPI } from '../../Api/api';\nimport { Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { getAuthUserPhoto } from '../../redux/authReducer';\n\n\nclass ProfileContainer extends React.Component {\n\n  refreshComponent() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authUserId;\n    }\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId);        \n    this.props.getAuthUserPhoto();\n  }\n\n  componentDidMount() {\n\n    this.refreshComponent();\n    \n   /*  let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = 17700;\n    }\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId); */\n   /*  usersAPI.getProfile(userId)\n  //axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\n      .then(response => {\n        this.props.setUserProfile(response.data)\n      }) */\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshComponent();\n      \n    }\n \n\n  }\n  render() {\n    return (\n      <Profile {...this.props}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        saveProfile={this.props.saveProfile}\n        updateStatus={this.props.updateStatus}\n        saveNewMainPic={this.props.saveNewMainPic}\n      />\n    )\n  }\n}\n\n\n\n\n\n\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authUserId: state.auth.userId,\n})\n/* \nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\nlet withUrlContainer = withRouter(AuthRedirectComponent);\n\n\n\nexport default connect (mapStateToProps, {getUserProfile})(withUrlContainer); */\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus, saveNewMainPic, saveProfile, getAuthUserPhoto }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n  })\n\n\nexport const withAuthRedirect = (Component) => {\n     class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\n            return <Component {...this.props} />\n        }\n     }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedAuthRedirectComponent;\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\",\"mainPic\":\"Profile_mainPic__3Krzy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"likeButton\":\"Post_likeButton__iek-s\",\"message\":\"Post_message__3raFK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__3boPV\",\"fullName\":\"ProfileInfo_fullName__2p--3\",\"userPic\":\"ProfileInfo_userPic__Ne5H0\",\"ownerUserPic\":\"ProfileInfo_ownerUserPic__1pnfC\",\"aboutMe\":\"ProfileInfo_aboutMe__1mww3\",\"contacts\":\"ProfileInfo_contacts__3y62P\",\"status\":\"ProfileInfo_status__2G3BZ\",\"icons\":\"ProfileInfo_icons__1w1-r\",\"iconsHover\":\"ProfileInfo_iconsHover__3-scH\",\"nameAndStatus\":\"ProfileInfo_nameAndStatus__29SDJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__3_Fge\",\"label\":\"ProfileDataForm_label__1PG5L\",\"input\":\"ProfileDataForm_input__2FqNM\"};"],"sourceRoot":""}